function getStyle(obj,attr){
	// currentStyle针对IE浏览器
	if (obj.currentStyle) {
		return obj.currentStyle[attr];
	}
	// getComputeStyle针对firefox浏览器
	else{
		return getComputedStyle(obj,false)[attr];
	}
}
// startMove(obj,{attr1:itarget1,attr2:itarget2},fn)
function startMove(obj,json,fn){

	
	clearInterval(obj.timer);
	
	obj.timer=setInterval(function() {
				var flag=true;//假设所有的运动都到达了目标值
				for(var attr in json){

					var icur=0;// 判断是不是透明度，采用不同的方式获取处理数值
					if (attr=='opacity') {
						
					icur=Math.round(parseFloat(getStyle(obj,attr))*100);
					} else {
						var icur=parseInt(getStyle(obj,attr));
					}
					// 改变速率，目标值减去当前值，速率比为1/8；
					var speed=(json[attr]-icur)/8;
					// 如果速度大于0，则向上取整，否则向下取整
					speed=speed>0?Math.ceil(speed):Math.floor(speed);
					// 如果目标值并不都等于当前值，这继续
					if (icur!=json[attr]) {
						flag=false;
					}
					if(attr=='opacity'){
						obj.style.filter='alpha(opacity:'+(icur+speed)+')';
						obj.style.opacity=(icur+speed)/100;
					}
					else{
					obj.style[attr]=icur+speed+'px';
					}
				}
					// 目标值等于当前值，清除定时器
					if(flag){
						clearInterval(obj.timer);
						if (fn) 
						{
							fn();
						}
					}
			}, 30)
		}



/*Math.floor(x)方法可对一个数进行下舍入。
abs() 方法可返回数的绝对值。
round() 方法可把一个数字舍入为最接近的整数。
ceil() 方法可对一个数进行上舍入。
Math.random()方法可返回介于 0 ~ 1 之间的一个随机数。*/

/*parseFloat() 函数可解析一个字符串，并返回一个浮点数 例:
document.write(parseFloat("10")) 			10
document.write(parseFloat("10.00")) 		10.00
document.write(parseFloat("10.33")) 		10.33
document.write(parseFloat("34 45 66")) 		34*/

/*Math.floor(x)方法可对一个数进行下舍入。
Math.abs() 方法可返回数的绝对值。
Math.round() 方法可把一个数字舍入为最接近的整数。
Math.ceil() 方法可对一个数进行上舍入。
Math.random()方法可返回介于 0 ~ 1 之间的一个随机数。*/

